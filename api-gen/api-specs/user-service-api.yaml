openapi: 3.0.3
info:
  title: User Service API
  description: 用户服务API，提供用户注册、登录、用户信息管理等功能
  version: 1.0.0
  contact:
    name: API Support
    email: support@qpzm7903.com

servers:
  - url: http://localhost:8081
    description: User Service Development Server

tags:
  - name: authentication
    description: 用户认证相关接口
  - name: user-management
    description: 用户管理相关接口

paths:
  /auth/register:
    post:
      tags:
        - authentication
      summary: 用户注册
      description: 新用户注册接口
      operationId: register
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegisterRequest'
      responses:
        '201':
          description: 注册成功
          content:
            application/json:
              schema:
                allOf:
                  - $ref: 'common-types.yaml#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/UserInfo'
        '400':
          description: 请求参数错误
          content:
            application/json:
              schema:
                $ref: 'common-types.yaml#/components/schemas/ErrorResponse'
        '409':
          description: 用户已存在
          content:
            application/json:
              schema:
                $ref: 'common-types.yaml#/components/schemas/ErrorResponse'

  /auth/login:
    post:
      tags:
        - authentication
      summary: 用户登录
      description: 用户登录接口
      operationId: login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLoginRequest'
      responses:
        '200':
          description: 登录成功
          content:
            application/json:
              schema:
                allOf:
                  - $ref: 'common-types.yaml#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/LoginResponse'
        '401':
          description: 认证失败
          content:
            application/json:
              schema:
                $ref: 'common-types.yaml#/components/schemas/ErrorResponse'
        '423':
          description: 账户被锁定
          content:
            application/json:
              schema:
                $ref: 'common-types.yaml#/components/schemas/ErrorResponse'

  /auth/logout:
    post:
      tags:
        - authentication
      summary: 用户登出
      description: 用户登出接口
      operationId: logout
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 登出成功
          content:
            application/json:
              schema:
                $ref: 'common-types.yaml#/components/schemas/ApiResponse'

  /users:
    get:
      tags:
        - user-management
      summary: 获取用户列表
      description: 分页查询用户列表
      operationId: getUserList
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          description: 页码，从0开始
          required: false
          schema:
            type: integer
            minimum: 0
            default: 0
        - name: size
          in: query
          description: 每页大小
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
        - name: sort
          in: query
          description: 排序字段
          required: false
          schema:
            type: string
            default: "createTime"
        - name: direction
          in: query
          description: 排序方向
          required: false
          schema:
            $ref: 'common-types.yaml#/components/schemas/PageRequest/properties/sortDirection'
        - name: username
          in: query
          description: 用户名筛选
          required: false
          schema:
            type: string
        - name: email
          in: query
          description: 邮箱筛选
          required: false
          schema:
            type: string
        - name: status
          in: query
          description: 用户状态筛选
          required: false
          schema:
            $ref: '#/components/schemas/UserStatus'
      responses:
        '200':
          description: 查询成功
          content:
            application/json:
              schema:
                allOf:
                  - $ref: 'common-types.yaml#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        allOf:
                          - $ref: 'common-types.yaml#/components/schemas/PageData'
                          - type: object
                            properties:
                              content:
                                type: array
                                items:
                                  $ref: '#/components/schemas/UserInfo'
        '403':
          description: 权限不足
          content:
            application/json:
              schema:
                $ref: 'common-types.yaml#/components/schemas/ErrorResponse'

    post:
      tags:
        - user-management
      summary: 创建用户
      description: 管理员创建新用户
      operationId: createUser
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreateRequest'
      responses:
        '201':
          description: 创建成功
          content:
            application/json:
              schema:
                allOf:
                  - $ref: 'common-types.yaml#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/UserInfo'
        '400':
          description: 请求参数错误
          content:
            application/json:
              schema:
                $ref: 'common-types.yaml#/components/schemas/ErrorResponse'
        '403':
          description: 权限不足
          content:
            application/json:
              schema:
                $ref: 'common-types.yaml#/components/schemas/ErrorResponse'
        '409':
          description: 用户已存在
          content:
            application/json:
              schema:
                $ref: 'common-types.yaml#/components/schemas/ErrorResponse'

  /users/{userId}:
    get:
      tags:
        - user-management
      summary: 获取用户详情
      description: 根据用户ID获取用户详细信息
      operationId: getUserById
      security:
        - bearerAuth: []
      parameters:
        - name: userId
          in: path
          description: 用户ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 查询成功
          content:
            application/json:
              schema:
                allOf:
                  - $ref: 'common-types.yaml#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/UserInfo'
        '404':
          description: 用户不存在
          content:
            application/json:
              schema:
                $ref: 'common-types.yaml#/components/schemas/ErrorResponse'

    put:
      tags:
        - user-management
      summary: 更新用户信息
      description: 更新用户基本信息
      operationId: updateUser
      security:
        - bearerAuth: []
      parameters:
        - name: userId
          in: path
          description: 用户ID
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdateRequest'
      responses:
        '200':
          description: 更新成功
          content:
            application/json:
              schema:
                allOf:
                  - $ref: 'common-types.yaml#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/UserInfo'
        '400':
          description: 请求参数错误
          content:
            application/json:
              schema:
                $ref: 'common-types.yaml#/components/schemas/ErrorResponse'
        '403':
          description: 权限不足
          content:
            application/json:
              schema:
                $ref: 'common-types.yaml#/components/schemas/ErrorResponse'
        '404':
          description: 用户不存在
          content:
            application/json:
              schema:
                $ref: 'common-types.yaml#/components/schemas/ErrorResponse'

    delete:
      tags:
        - user-management
      summary: 删除用户
      description: 软删除用户（逻辑删除）
      operationId: deleteUser
      security:
        - bearerAuth: []
      parameters:
        - name: userId
          in: path
          description: 用户ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 删除成功
          content:
            application/json:
              schema:
                $ref: 'common-types.yaml#/components/schemas/ApiResponse'
        '403':
          description: 权限不足
          content:
            application/json:
              schema:
                $ref: 'common-types.yaml#/components/schemas/ErrorResponse'
        '404':
          description: 用户不存在
          content:
            application/json:
              schema:
                $ref: 'common-types.yaml#/components/schemas/ErrorResponse'

  /users/{userId}/status:
    patch:
      tags:
        - user-management
      summary: 更新用户状态
      description: 更新用户状态（激活、禁用、锁定等）
      operationId: updateUserStatus
      security:
        - bearerAuth: []
      parameters:
        - name: userId
          in: path
          description: 用户ID
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserStatusUpdateRequest'
      responses:
        '200':
          description: 状态更新成功
          content:
            application/json:
              schema:
                allOf:
                  - $ref: 'common-types.yaml#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/UserInfo'
        '400':
          description: 请求参数错误
          content:
            application/json:
              schema:
                $ref: 'common-types.yaml#/components/schemas/ErrorResponse'
        '403':
          description: 权限不足
          content:
            application/json:
              schema:
                $ref: 'common-types.yaml#/components/schemas/ErrorResponse'
        '404':
          description: 用户不存在
          content:
            application/json:
              schema:
                $ref: 'common-types.yaml#/components/schemas/ErrorResponse'

  /users/me:
    get:
      tags:
        - user-management
      summary: 获取当前用户信息
      description: 获取当前登录用户的详细信息
      operationId: getCurrentUser
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 查询成功
          content:
            application/json:
              schema:
                allOf:
                  - $ref: 'common-types.yaml#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/UserInfo'
        '401':
          description: 未认证
          content:
            application/json:
              schema:
                $ref: 'common-types.yaml#/components/schemas/ErrorResponse'

    put:
      tags:
        - user-management
      summary: 更新当前用户信息
      description: 用户更新自己的基本信息
      operationId: updateCurrentUser
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSelfUpdateRequest'
      responses:
        '200':
          description: 更新成功
          content:
            application/json:
              schema:
                allOf:
                  - $ref: 'common-types.yaml#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/UserInfo'
        '400':
          description: 请求参数错误
          content:
            application/json:
              schema:
                $ref: 'common-types.yaml#/components/schemas/ErrorResponse'
        '401':
          description: 未认证
          content:
            application/json:
              schema:
                $ref: 'common-types.yaml#/components/schemas/ErrorResponse'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    UserStatus:
      type: string
      enum:
        - ACTIVE
        - INACTIVE
        - LOCKED
        - DELETED
      description: |
        用户状态枚举:
        * `ACTIVE` - 激活状态
        * `INACTIVE` - 未激活状态
        * `LOCKED` - 锁定状态
        * `DELETED` - 已删除状态

    UserInfo:
      type: object
      required:
        - id
        - username
        - email
        - status
        - createTime
      properties:
        id:
          type: integer
          format: int64
          description: 用户ID
          example: 12345
        username:
          type: string
          description: 用户名
          example: "john_doe"
          minLength: 3
          maxLength: 50
        email:
          type: string
          format: email
          description: 邮箱地址
          example: "john.doe@example.com"
        fullName:
          type: string
          description: 用户真实姓名
          example: "张三"
          maxLength: 100
        phoneNumber:
          type: string
          description: 手机号码
          example: "13800138000"
          pattern: '^1[3-9]\d{9}$'
        avatar:
          type: string
          description: 头像URL
          example: "https://example.com/avatar/user123.jpg"
        status:
          $ref: '#/components/schemas/UserStatus'
        lastLoginTime:
          type: string
          format: date-time
          description: 最后登录时间
          example: "2023-12-01T10:30:00Z"
        createTime:
          type: string
          format: date-time
          description: 创建时间
          example: "2023-11-01T09:00:00Z"
        updateTime:
          type: string
          format: date-time
          description: 更新时间
          example: "2023-12-01T10:30:00Z"

    UserRegisterRequest:
      type: object
      required:
        - username
        - email
        - password
      properties:
        username:
          type: string
          description: 用户名
          example: "john_doe"
          minLength: 3
          maxLength: 50
          pattern: '^[a-zA-Z0-9_]+$'
        email:
          type: string
          format: email
          description: 邮箱地址
          example: "john.doe@example.com"
        password:
          type: string
          description: 密码
          example: "SecurePassword123!"
          minLength: 8
          maxLength: 100
        fullName:
          type: string
          description: 用户真实姓名
          example: "张三"
          maxLength: 100
        phoneNumber:
          type: string
          description: 手机号码
          example: "13800138000"
          pattern: '^1[3-9]\d{9}$'

    UserLoginRequest:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
          description: 用户名或邮箱
          example: "john_doe"
        password:
          type: string
          description: 密码
          example: "SecurePassword123!"
        rememberMe:
          type: boolean
          description: 是否记住登录状态
          default: false

    LoginResponse:
      type: object
      required:
        - accessToken
        - tokenType
        - expiresIn
        - userInfo
      properties:
        accessToken:
          type: string
          description: 访问令牌
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        tokenType:
          type: string
          description: 令牌类型
          example: "Bearer"
        expiresIn:
          type: integer
          description: 令牌过期时间（秒）
          example: 7200
        refreshToken:
          type: string
          description: 刷新令牌
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        userInfo:
          $ref: '#/components/schemas/UserInfo'

    UserCreateRequest:
      type: object
      required:
        - username
        - email
        - password
      properties:
        username:
          type: string
          description: 用户名
          example: "john_doe"
          minLength: 3
          maxLength: 50
          pattern: '^[a-zA-Z0-9_]+$'
        email:
          type: string
          format: email
          description: 邮箱地址
          example: "john.doe@example.com"
        password:
          type: string
          description: 密码
          example: "SecurePassword123!"
          minLength: 8
          maxLength: 100
        fullName:
          type: string
          description: 用户真实姓名
          example: "张三"
          maxLength: 100
        phoneNumber:
          type: string
          description: 手机号码
          example: "13800138000"
          pattern: '^1[3-9]\d{9}$'
        status:
          $ref: '#/components/schemas/UserStatus'
          default: ACTIVE

    UserUpdateRequest:
      type: object
      properties:
        email:
          type: string
          format: email
          description: 邮箱地址
          example: "john.doe@example.com"
        fullName:
          type: string
          description: 用户真实姓名
          example: "张三"
          maxLength: 100
        phoneNumber:
          type: string
          description: 手机号码
          example: "13800138000"
          pattern: '^1[3-9]\d{9}$'
        avatar:
          type: string
          description: 头像URL
          example: "https://example.com/avatar/user123.jpg"

    UserSelfUpdateRequest:
      type: object
      properties:
        fullName:
          type: string
          description: 用户真实姓名
          example: "张三"
          maxLength: 100
        phoneNumber:
          type: string
          description: 手机号码
          example: "13800138000"
          pattern: '^1[3-9]\d{9}$'
        avatar:
          type: string
          description: 头像URL
          example: "https://example.com/avatar/user123.jpg"

    UserStatusUpdateRequest:
      type: object
      required:
        - status
      properties:
        status:
          $ref: '#/components/schemas/UserStatus'
        reason:
          type: string
          description: 状态变更原因
          example: "违反社区规定"
          maxLength: 500 